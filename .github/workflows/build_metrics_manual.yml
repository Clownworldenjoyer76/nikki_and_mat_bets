name: Build Metrics (Manual)

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season year (e.g., 2025). Leave blank to auto-detect from final CSVs."
        required: false
        default: ""

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Pre-run snapshot
        shell: bash
        run: |
          set -e
          echo "=== Existing final files (newest first) ==="
          ls -lt docs/data/final 2>/dev/null || true
          echo "=== Existing metrics BEFORE ==="
          ls -l docs/data/metrics 2>/dev/null || true
          if ls docs/data/metrics/*.csv >/dev/null 2>&1; then
            echo "=== Hashes BEFORE ==="
            sha256sum docs/data/metrics/*.csv | sort
          fi

      - name: Run aggregator
        shell: bash
        run: |
          set -e

          IN_SEASON="${{ inputs.season }}"
          if [ -z "$IN_SEASON" ]; then
            latest=$(ls -t docs/data/final/*_wk*_final.csv 2>/dev/null | head -n1 || true)
            if [ -n "$latest" ]; then
              base=$(basename "$latest")
              IN_SEASON="${base%%_*}"
              echo "Auto-detected season: $IN_SEASON"
            else
              echo "ERROR: No final CSVs found to auto-detect season."
              exit 78
            fi
          else
            echo "Season provided: $IN_SEASON"
          fi

          echo "=== Final files for season ${IN_SEASON} ==="
          ls -1 docs/data/final/${IN_SEASON}_wk*_final.csv 2>/dev/null || true
          matches=$(ls docs/data/final/${IN_SEASON}_wk*_final.csv 2>/dev/null | wc -l | xargs)
          if [ "$matches" = "0" ]; then
            echo "ERROR: No final CSVs for season ${IN_SEASON}"
            exit 78
          fi

          python -m pip install --upgrade pip pandas

          # Run your metrics builder
          python scripts/aggregate_metrics.py "${IN_SEASON}"

      - name: Post-run snapshot
        if: always()
        shell: bash
        run: |
          echo "=== Metrics AFTER ==="
          ls -l docs/data/metrics 2>/dev/null || true
          if ls docs/data/metrics/*.csv >/dev/null 2>&1; then
            echo "=== Hashes AFTER ==="
            sha256sum docs/data/metrics/*.csv | sort
          fi

      - name: Commit metrics
        if: always()
        shell: bash
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"

          # Show which files actually changed before committing
          git add -N docs/data/metrics/*.csv 2>/dev/null || true
          echo "=== Changed files (git diff --name-only) ==="
          git diff --name-only -- docs/data/metrics || true
          echo "=== Diffstat ==="
          git diff --stat -- docs/data/metrics || true

          git add docs/data/metrics/*.csv 2>/dev/null || true
          git commit -m "Metrics updated" && git push || echo "No metric changes"
